{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","props","state","children","this","className","style","background","Component","DownIcon","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitlesAndIcons","color","changeColor","bind","setState","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","eachskill","Navigation","href","App","text","zamine","counter","background_first","background_second","background_third","animationInterval","snowCharacter","vMaxY","vMaxX","onClick","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7184116.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport './Fullpage.css';\r\n\r\nclass Fullpage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render(){\r\n        const{children} = this.props\r\n        return(<div className={`fullpage ${this.props.className} || '' ` } style={{\r\n            background:this.props.background\r\n    \r\n          }}>\r\n            \r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fullpage ","import React ,{Component} from \"react\";\r\n\r\nconst DownIcon =(props) => {\r\n    return(\r\n        <div \r\n        style ={{\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            alignItems:\"center\",\r\n            justifyContent:\"center\",\r\n            marginBottom:\"-34px\",\r\n            transform:\"translateY(-45px)\"\r\n            }}>\r\n              <div \r\n              style={{\r\n               maxWidth:'30px',\r\n             }}>\r\n              <img src={props.icon}/>\r\n               </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DownIcon\r\n\r\n","import React,{Component} from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from '../data.json'\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport './TitlesAndIcons.css'\r\nimport DownIcon from '../components/DownIcon'\r\nimport { Link , Element} from 'react-scroll'\r\nimport { Transform } from \"stream\";\r\n\r\nclass TitlesAndIcons extends Component{\r\n  constructor(){\r\n    super()\r\n     this.state={\r\n      color : 'white'  }\r\nthis.changeColor = this.changeColor.bind(this);\r\n}\r\n changeColor(){\r\n   this.setState({\r\n      color : this.state.color === 'white' ? 'yellow' : 'white'\r\n     });\r\n }\r\n   render(){\r\n       return(\r\n         <div>\r\n                <Fullpage className=\"first\" background={this.props.background}>\r\n       <h1 className=\"title\"\r\n       style={{\r\n           color: this.state.color\r\n         }}\r\n       onMouseOver={ this.changeColor }\r\n       onMouseLeave={()=>{\r\n        this.changeColor();\r\n       }}>\r\n         {data.title} </h1>\r\n         <div>\r\n           <h2 style={{ color: this.props.color }}>{data.subtitle} </h2>\r\n         </div>\r\n         <div className=\"icons-wrapper\">\r\n           {Object.keys(data.links).map(key => {\r\n               return (\r\n                 <div className=\"icon\">\r\n                 <SocialIcon url={data.links[key]} />\r\n                 </div>\r\n               );\r\n             })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n        activeClass=\"active\"\r\n        to=\"about\"\r\n        spy={true}\r\n        smooth={true}\r\n        offset={50}\r\n        duration={500}\r\n        delay={0}        \r\n        >\r\n        <DownIcon\r\n        icon={data.icons.down}\r\n        />\r\n       </Link>\r\n<Element name=\"About\" className=\"element\"/>\r\n       </div>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesAndIcons;","import React,{Component} from \"react\";\r\nimport {Link, Element} from \"react-scroll\"\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from '../data.json'\r\nimport './AboutSection.css'\r\nimport DownIcon from \"../components/DownIcon.js\";\r\n\r\nclass AboutSection extends Component{\r\n  state = {};\r\n   render(){\r\n       return(\r\n         <div>\r\n                <Fullpage className=\"second\" background={this.props.background}>\r\n                <h3 style={{ color: this.props.color }}> {data.sections[0].title} </h3>\r\n        <div className=\"paragraphs\" style={{ color: this.props.color }}>\r\n        {data.sections[0].items.map(p=> {\r\n          return<p>{p.content}</p>;\r\n         })}\r\n       </div>\r\n       </Fullpage>\r\n       <Element name=\"Skills\" className=\"element\" />\r\n        </div>\r\n       );\r\n   }\r\n}\r\n\r\nexport default AboutSection;","import React,{Component} from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component{\r\n    render(){\r\n        const{skill} = this.props\r\n        return(\r\n            <div className=\"card\">\r\n                    <div className=\"image-wrapper\">\r\n                       <img src={skill.content.image}/>\r\n                    </div>\r\n                    <div className=\"skill-title-wrapper\">\r\n                      <h4>\r\n                        {skill.content.title}\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SkillCard","import React,{Component} from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from '../data.json'\r\nimport SkillCard from '../components/SkillCard'\r\nimport './SkillSection.css'\r\n\r\n\r\nclass SkillSection extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={};\r\n  }\r\n   render(){\r\n       return(<div>\r\n                <Fullpage className=\"third\"  background={this.props.background}>\r\n                <h3>{data.sections[1].title}</h3>\r\n          <div className=\"cards-wrapper\">\r\n            {\r\n              data.sections[1].items.map(eachskill =>{\r\n                return(\r\n                  <SkillCard skill ={eachskill}/>\r\n                );\r\n              })}\r\n       </div>\r\n       </Fullpage>\r\n       </div>\r\n       );\r\n   }\r\n}\r\n\r\nexport default SkillSection; ","import React, { Component } from \"react\";\r\nimport { Link , Element} from 'react-scroll'\r\nimport \"../components/Navigation\";\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\" style={{ background: \"transparent\" }}>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"About\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n        >\r\n         <a href=\"\">About</a>\r\n        </Link>\r\n\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n        >\r\n        <a href=\"\">Skills</a>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React ,{Component} from 'react';\nimport TitlesAndIcons from './sections/TitlesAndIcons'\nimport AboutSection from './sections/AboutSection';\nimport SkillSection from './sections/SkillSection'\nimport Navigation from './components/Navigation';\nimport SnowStorm from \"react-snowstorm\";\n\nimport {Link , Element} from \"react-scroll\"\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"white\",\n      background_first: \"#750080\",\n      background_second: \"#02ccbb\",\n      background_third: \"#800020\",\n      counter: 0\n    };\n  }\n  changeColor = () => {\n    let text = [\"green\", \"aqua\", \"red\", \"brown\"];\n    let zamine = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#1e1f26\"];\n    if (this.state.counter > 3) {\n      this.setState({\n        counter: 0,\n        color: text [this.state.counter],\n        background_first: \" #3c2f2f\",\n        background_second: \" #3c2f2f\",\n        background_third: \" #3c2f2f\"\n      });\n    } else\n      this.setState({\n        color: text [this.state.counter],\n        background_first: zamine[this.state.counter],\n        background_second: zamine[this.state.counter],\n        background_third: zamine[this.state.counter],\n        counter: this.state.counter + 1\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n      <SnowStorm animationInterval = {50} snowCharacter = {\"*\"} vMaxY={2} vMaxX ={2}/>\n        <Element name=\"Home\" className=\"element\" />\n        <Navigation background={this.state.background} />\n        <div className=\"changetheme\">\n          <img onClick={this.changeColor} src=\"images/color.png\" alt=\"\" />\n        </div>\n\n      <TitlesAndIcons\n      color={this.state.color}\n      background={this.state.background_first}\n\n      />\n      <AboutSection\n       color={this.state.color}\n       background={this.state.background_second}\n      />\n       <SkillSection \n        color={this.state.color}\n        background={this.state.background_third}\n       />\n       <Navigation/>\n       <SnowStorm />\n     </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}